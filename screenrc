#sessionname "Main Screen" # Problems for PSI 'interactive' command
#kill startup message
startup_message off

#UTF-8
setenv LC_CTYPE en_US.UTF-8
defutf8 on

# define a bigger scrollback, default is 100 lines
defscrollback 1024

# on Debian backspace should send char `177':
#bindkey -k kb stuff "177"

# An alternative hardstatus to display a bar at the bottom listing the
# windownames and highlighting the current windowname in blue. (This is only
# enabled if there is no hardstatus setting for your terminal)
hardstatus on
hardstatus alwayslastline
hardstatus string "%{.bW}%-w%{.rW}%n %t%{-}%+w %=%{..G} %H %{..Y} %m/%d %C%a "
# http://www.kilobitspersecond.com/2014/02/10/understanding-gnu-screens-hardstatus-strings/
#
# hardstatus string "%{= KW} %H [%`] %{= Kw}|%{-} %-Lw%{= bW}%n%f %t%{-}%+Lw %=%C%a %Y-%M-%d"
# http://www.gnu.org/software/screen/manual/html_node/String-Escapes.html
#
# %{= wK} : set colors to bright white (W) on bright black (K) and keep current text styles (=)
# %H      : hostname
# [       : opening bracket character
# %`      : print output of 'backtick' command (defined elsewhere in .screenrc)
# ]       : closing bracket character
# %{= wW} : set colors to white (w) on bright black (K) and keep current text styles (=)
# |       : bar character
# ${-}    : restore colors to previous colors / undo last color change
# %-Lw    : list windows before current window (L [optional] = "include flags")
# %{= bW} : set colors to bright white (W) on blue (b) and keep current text styles (=)
# %f      : window flags
# %t      : window title
# %{-}    : restore colors to previous colors / undo last color change
# %+Lw    : list windows after current window (L [optional] = "include flags")
# %=      : expand to fill all space (used here to make remaining content flush right)
# %C      : current time (12-hr; 24-hr is %c)
# %a      : am/pm (lowercase; uppercase is %A)
# %Y      : current year
# -       : hyphen character
# %m      : current month (0-padded; %M for "Jan" etc.)
# -       : hyphen character
# %d      : current date (0-padded)

#termcapinfo xterm*|Eterm|mlterm|rxvt 'hs:ts=\E]0;:fs=\007:ds=\E]0;screen\007'
#defhstatus "$USER@ H | #  |  t"
caption always '%3n %t'

#vbell off
#activity "%c activity -> %n%f %t"
#bell "%c bell -> %n%f %t^G"
#vbell_msg " *beep* "
#caption always " %m%d %c |  %w"

# Make shift-PgUp and shift-PgDn work like they do in xterm.  (Note that this
# requires xterm to be configured to pass those keys through, and not try to
# act on them itself.)
#bindkey "^[[5;2~" eval "copy" "stuff ^u"
#bindkey -m "^[[5;2~" stuff ^u
#bindkey -m "^[[6;2~" stuff ^d

#term xterm

# Use Ctrl-\ as the command character
# Use Ctrl-\-Ctrl-\ as a replacement for Ctrl-\
#escape ^\^\

# This is how one can set a reattach password:
# password ODSJQf.4IJN7E    # "1234"

# Emulate .logout message
#pow_detach_msg "Screen session of \$LOGNAME \$:cr:\$:nl:ended."

# advertise hardstatus support to $TERMCAP
# termcapinfo  * '' 'hs:ts=\E_:fs=\E\\:ds=\E_\E\\'

# make the shell in every window a login shell
shell -bash

#bindings
bind ^\

# ------------------------------------------------------------------------------
# STARTUP SCREENS
# ------------------------------------------------------------------------------

# Example of automatically running some programs in windows on screen startup.
# Use the form: screen [-flag] [window name] [window number] [program to run in window]
# The -t flag means that the window in which that program is running
# closes when you exit that program, so if you quit pine
# window 2 closes.

#screen -t bash 1 
#screen -t code 2
#screen -t vergil 2 vergil

# Launching
#bind V screen -t 'vim' 0 vim
